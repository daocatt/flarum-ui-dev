{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+BCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,yB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,8B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,mC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,mC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,+B,aCkBxDC,IAAAA,aAAiBC,IAAI,iBAAiB,SAACD,IAEnCE,EAAAA,EAAAA,UAASC,IAAAA,UAAqB,QAAQ,SAA2BC,GAyB7D,OAxBAC,KAAKC,KAAO,WACR,OACIC,EAAA,OAAKC,UAAU,aAEbD,EAAA,OAAKC,UAAU,aACbD,EAAA,OAAKC,UAAU,oBACbD,EAAA,OAAKC,UAAU,yBACbD,EAAA,UAAKE,IAAUJ,KAAKK,eAAeC,aAErCJ,EAAA,OAAKC,UAAU,mCACZH,KAAKO,OACNL,EAAA,OAAKC,UAAU,qBACXD,EAAA,OAAKC,UAAU,qBACfD,EAAA,MAAIC,UAAU,0BAA0BC,IAAUJ,KAAKQ,YAAYF,YACnEJ,EAAA,MAAIC,UAAU,4BAA4BC,IAAUJ,KAAKS,cAAcH,aAEvEJ,EAACQ,IAAc,CAACC,MAAOhB,EAAIiB,kBAO/C,EACOb,GACX,KAEAc,EAAAA,EAAAA,QAAOC,IAAAA,UAA0B,gBAAgB,SAAUC,GACvDA,EAAMC,OAAO,WACjB,KAEAnB,EAAAA,EAAAA,UAASiB,IAAAA,UAA0B,QAAQ,SAAgCf,GAoCvE,OAlCAC,KAAKiB,YAAc,WACf,IAAMF,EAAQ,IAAIG,KAKlB,OAFAH,EAAMnB,IAAI,OAAQM,EAAA,OAAKC,UAAU,aAAaH,KAAKmB,cAAcb,WAAkB,IAE5ES,CACX,EAMAf,KAAKmB,YAAc,WACf,IAAMJ,EAAQ,IAAIG,KAiBlB,OAfAH,EAAMnB,IAAI,UAAWI,KAAKoB,UAAW,KACrCL,EAAMnB,IACF,aACAM,EAAA,OAAKC,UAAU,yBACfD,EAAA,OAAKC,UAAU,yBACVH,KAAKO,QAGVL,EAAA,OAAKC,UAAU,2BACXD,EAACmB,IAAU,CAACC,WAAYtB,KAAKsB,WAAYC,OAAQvB,KAAKuB,OAAQC,iBAAkBxB,KAAKyB,gBAAgBC,KAAK1B,UAG9G,IAGGe,CACX,EAEOhB,GACX,GAGJ,G","sources":["webpack://@gtdxyz/flarum-ui-dev/webpack/bootstrap","webpack://@gtdxyz/flarum-ui-dev/webpack/runtime/compat get default export","webpack://@gtdxyz/flarum-ui-dev/webpack/runtime/define property getters","webpack://@gtdxyz/flarum-ui-dev/webpack/runtime/hasOwnProperty shorthand","webpack://@gtdxyz/flarum-ui-dev/webpack/runtime/make namespace object","webpack://@gtdxyz/flarum-ui-dev/external root \"flarum.core.compat['forum/app']\"","webpack://@gtdxyz/flarum-ui-dev/external root \"flarum.core.compat['common/extend']\"","webpack://@gtdxyz/flarum-ui-dev/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@gtdxyz/flarum-ui-dev/external root \"flarum.core.compat['common/helpers/listItems']\"","webpack://@gtdxyz/flarum-ui-dev/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@gtdxyz/flarum-ui-dev/external root \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@gtdxyz/flarum-ui-dev/external root \"flarum.core.compat['forum/components/DiscussionList']\"","webpack://@gtdxyz/flarum-ui-dev/external root \"flarum.core.compat['forum/components/PostStream']\"","webpack://@gtdxyz/flarum-ui-dev/./src/forum/index.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/listItems'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostStream'];","import app from 'flarum/forum/app';\nimport { extend, override } from 'flarum/common/extend';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport listItems from 'flarum/common/helpers/listItems';\n// import isObject from 'flarum/utils/isObject';\nimport type * as Mithril from 'mithril';\n\n// import Tag from 'flarum/tags/common/models/Tag';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\n// import WelcomeHero from 'flarum/forum/components/WelcomeHero';\n// import DiscussionHero from 'flarum/forum/components/DiscussionHero';\nimport DiscussionList from 'flarum/forum/components/DiscussionList';\nimport PostStream from 'flarum/forum/components/PostStream';\nimport PostFirstStream from './components/PostFirstStream';\nimport PostOnlyStream from './components/PostOnlyStream';\n\n\napp.initializers.add('gtdxyz-ui-dev', (app) => {\n\n    override(IndexPage.prototype, 'view', function (this: IndexPage, originalFunc: () => Mithril.Children): Mithril.Children {\n        this.view = function() {\n            return (\n                <div className=\"IndexPage\">\n                  \n                  <div className=\"container\">\n                    <div className=\"sideNavContainer\">\n                      <nav className=\"IndexPage-nav sideNav\">\n                        <ul>{listItems(this.sidebarItems().toArray())}</ul>\n                      </nav>\n                      <div className=\"IndexPage-results sideNavOffset\">\n                        {this.hero()}\n                        <div className=\"IndexPage-content\">\n                            <div className=\"IndexPage-toolbar\">\n                            <ul className=\"IndexPage-toolbar-view\">{listItems(this.viewItems().toArray())}</ul>\n                            <ul className=\"IndexPage-toolbar-action\">{listItems(this.actionItems().toArray())}</ul>\n                            </div>\n                            <DiscussionList state={app.discussions} />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n        }\n        return originalFunc();\n    });\n\n    extend(DiscussionPage.prototype, 'sidebarItems', function (items) {\n        items.remove('scrubber');\n    });\n\n    override(DiscussionPage.prototype, 'view', function (this: DiscussionPage, originalFunc: () => Mithril.Children): Mithril.Children {\n\n        this.pageContent = function(): ItemList<Mithril.Children> {\n            const items = new ItemList<Mithril.Children>();\n        \n            // items.add('hero', this.hero(), 100);\n            items.add('main', <div className=\"container\">{this.mainContent().toArray()}</div>, 10);\n        \n            return items;\n        }\n\n        /**\n         * List of items rendered inside the main page content container.\n         * <div className=\"DiscussionPage-thread-body\">{m.trust(this.discussion.firstPost().contentHtml())}</div>\n         */\n        this.mainContent = function(): ItemList<Mithril.Children> {\n            const items = new ItemList<Mithril.Children>();\n        \n            items.add('sidebar', this.sidebar(), 100);\n            items.add(\n                'poststream',\n                <div className=\"DiscussionPage-stream\">\n                <div className=\"DiscussionPage-thread\">\n                    {this.hero()}\n                    {/* <PostFirstStream discussion={this.discussion} stream={this.stream} onPositionChange={this.positionChanged.bind(this)} />     */}\n                </div>\n                <div className=\"DiscussionPage-comments\">\n                    <PostStream discussion={this.discussion} stream={this.stream} onPositionChange={this.positionChanged.bind(this)} />\n                </div>\n                </div>,\n                10\n            );\n        \n            return items;\n        }\n\n        return originalFunc();\n    });\n\n    \n});\n\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","add","override","IndexPage","originalFunc","this","view","m","className","listItems","sidebarItems","toArray","hero","viewItems","actionItems","DiscussionList","state","discussions","extend","DiscussionPage","items","remove","pageContent","ItemList","mainContent","sidebar","PostStream","discussion","stream","onPositionChange","positionChanged","bind"],"sourceRoot":""}